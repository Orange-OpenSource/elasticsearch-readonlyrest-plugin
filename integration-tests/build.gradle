group = 'org.elasticsearch.plugin'
version = pluginVersion

buildscript {
    ext {
        pluginVersion = rootProject.properties['pluginVersion']
    }
    repositories {
        mavenLocal()
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath 'nl.javadude.gradle.plugins:license-gradle-plugin:0.10.0'
    }
}

subprojects {
    tasks.withType(Test) {
        maxParallelForks = 1
    }
}

apply plugin: 'java'
apply plugin: 'license'

repositories {
    mavenCentral()
    maven { url 'https://repo.gradle.org/gradle/libs-releases' }
    maven { url 'https://jitpack.io' }
}

test {
    systemProperty "project.dir", rootProject.projectDir
    enabled = project.hasProperty('esModule')
    if (enabled) {
        def module = project.properties['esModule']
        systemProperty "esModule", module
    }
    outputs.upToDateWhen { false }

    testLogging {
        showStandardStreams = true
        exceptionFormat = 'full'
        events "standardOut", "started", "passed", "skipped", "failed"
    }
}

dependencies {
    testCompile project(':tests-utils')
    testCompile 'io.jsonwebtoken:jjwt:0.7.0'
    testCompile 'org.gradle:gradle-tooling-api:2.13'
}

license {
    header rootProject.file('ReadonlyRESTLicenseHeader.txt')
    skipExistingHeaders true
    useDefaultMappings = false
    mapping {
        java = 'SLASHSTAR_STYLE'
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '3.5'
}
